services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - postgres
      - redis
      - minio
      - migrate
    restart: unless-stopped

  migrate:
    build:
      context: .
      dockerfile: backend/Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}      
    command: >
      sh -c "
        echo 'Waiting for postgres...' &&
        sleep 10 &&
        alembic upgrade head
      "
    depends_on:
      - postgres
    restart: "no"

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    environment:
      - CHOKIDAR_USEPOLLING=true  # 解决 Vite 热更新在 Docker 中失效问题
      # - REACT_APP_API_BASE=http://backend:8000
    restart: unless-stopped
    volumes:
       - ./frontend:/app
       - /app/node_modules

  # future-ready: you can uncomment when needed
  postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: sewer_db
    ports:
      - "5432:5432"
    env_file:
      - .env     
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}     
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./data:/docker-entrypoint-initdb.d  # ⬅️ 自动执行目录      
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: unless-stopped

      
volumes:
  pgdata:
  minio_data:
