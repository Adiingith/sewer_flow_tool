"""delete strom_dryday table

Revision ID: aa1f96c754f0
Revises: 9eacc3477f54
Create Date: 2025-07-07 18:39:23.133003

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aa1f96c754f0'
down_revision: Union[str, None] = '9eacc3477f54'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('weather_event',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('event_type', sa.Text(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('area', sa.Text(), nullable=False),
    sa.Column('interim', sa.Text(), nullable=False),
    sa.Column('storm_type', sa.Text(), nullable=True),
    sa.Column('dry_day_number', sa.Integer(), nullable=True),
    sa.Column('coverage', sa.Text(), nullable=True),
    sa.Column('event_comment', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('dry_day_event')
    op.drop_table('storm_event')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('storm_event',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('monitor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('storm_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('event_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('event_comment', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('coverage', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitor.id'], name=op.f('storm_event_monitor_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('storm_event_pkey'))
    )
    op.create_table('dry_day_event',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('monitor_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dry_day_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('event_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('event_comment', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitor.id'], name=op.f('dry_day_event_monitor_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('dry_day_event_pkey'))
    )
    op.drop_table('weather_event')
    # ### end Alembic commands ###
